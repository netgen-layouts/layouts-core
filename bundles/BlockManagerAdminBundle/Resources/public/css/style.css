/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
/* Document
       ========================================================================== */
/**
     * 1. Correct the line height in all browsers.
     * 2. Prevent adjustments of font size after orientation changes in
     *    IE on Windows Phone and in iOS.
     */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
       ========================================================================== */
/**
     * Remove the margin in all browsers (opinionated).
     */
body {
  margin: 0; }

/**
     * Add the correct display in IE 9-.
     */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
     * Correct the font size and margin on `h1` elements within `section` and
     * `article` contexts in Chrome, Firefox, and Safari.
     */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
figcaption,
figure {
  display: block; }

/**
     * Add the correct margin in IE 8.
     */
figure {
  margin: 1em 40px; }

/**
     * 1. Add the correct box sizing in Firefox.
     * 2. Show the overflow in Edge and IE.
     */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
     * Add the correct display in IE.
     */
main {
  display: block; }

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Links
       ========================================================================== */
/**
     * 1. Remove the gray background on active links in IE 10.
     * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
     */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/* Text-level semantics
       ========================================================================== */
/**
     * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
     * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
     */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
     * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
     */
b,
strong {
  font-weight: inherit; }

/**
     * Add the correct font weight in Chrome, Edge, and Safari.
     */
b,
strong {
  font-weight: bolder; }

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
     * Add the correct font style in Android 4.3-.
     */
dfn {
  font-style: italic; }

/**
     * Add the correct background and color in IE 9-.
     */
mark {
  background-color: #ff0;
  color: #000; }

/**
     * Add the correct font size in all browsers.
     */
small {
  font-size: 80%; }

/**
     * Prevent `sub` and `sup` elements from affecting the line height in
     * all browsers.
     */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
audio,
video {
  display: inline-block; }

/**
     * Add the correct display in iOS 4-7.
     */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
     * Remove the border on images inside links in IE 10-.
     */
img {
  border-style: none; }

/**
     * Hide the overflow in IE.
     */
svg:not(:root) {
  overflow: hidden; }

/* Forms
       ========================================================================== */
/**
     * 1. Change the font styles in all browsers (opinionated).
     * 2. Remove the margin in Firefox and Safari.
     */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
     * Show the overflow in IE.
     */
button {
  overflow: visible; }

/**
     * Remove the inheritance of text transform in Edge, Firefox, and IE.
     * 1. Remove the inheritance of text transform in Firefox.
     */
button,
select {
  /* 1 */
  text-transform: none; }

/**
     * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
     *    controls in Android 4.
     * 2. Correct the inability to style clickable types in iOS and Safari.
     */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

button,
[type="button"],
[type="reset"],
[type="submit"] {
  /**
       * Remove the inner border and padding in Firefox.
       */
  /**
       * Restore the focus styles unset by the previous rule.
       */ }
  button::-moz-focus-inner,
  [type="button"]::-moz-focus-inner,
  [type="reset"]::-moz-focus-inner,
  [type="submit"]::-moz-focus-inner {
    border-style: none;
    padding: 0; }
  button:-moz-focusring,
  [type="button"]:-moz-focusring,
  [type="reset"]:-moz-focusring,
  [type="submit"]:-moz-focusring {
    outline: 1px dotted ButtonText; }

/**
     * Show the overflow in Edge.
     */
input {
  overflow: visible; }

/**
     * 1. Add the correct box sizing in IE 10-.
     * 2. Remove the padding in IE 10-.
     */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
     * Correct the cursor style of increment and decrement buttons in Chrome.
     */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
     * 1. Correct the odd appearance in Chrome and Safari.
     * 2. Correct the outline style in Safari.
     */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
  /**
       * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
       */ }
  [type="search"]::-webkit-search-cancel-button, [type="search"]::-webkit-search-decoration {
    -webkit-appearance: none; }

/**
     * 1. Correct the inability to style clickable types in iOS and Safari.
     * 2. Change font properties to `inherit` in Safari.
     */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/**
     * Correct the padding in Firefox.
     */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
     * 1. Correct the text wrapping in Edge and IE.
     * 2. Correct the color inheritance from `fieldset` elements in IE.
     * 3. Remove the padding so developers are not caught out when they zero out
     *    `fieldset` elements in all browsers.
     */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  color: inherit;
  /* 2 */
  white-space: normal;
  /* 1 */ }

/**
     * 1. Add the correct display in IE 9-.
     * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
     */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
     * Remove the default vertical scrollbar in IE.
     */
textarea {
  overflow: auto; }

/* Interactive
       ========================================================================== */
/*
     * Add the correct display in Edge, IE, and Firefox.
     */
details {
  display: block; }

/*
     * Add the correct display in all browsers.
     */
summary {
  display: list-item; }

/*
     * Add the correct display in IE 9-.
     */
menu {
  display: block; }

/* Scripting
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
canvas {
  display: inline-block; }

/**
     * Add the correct display in IE.
     */
template {
  display: none; }

/* Hidden
       ========================================================================== */
/**
     * Add the correct display in IE 10-.
     */
[hidden] {
  display: none; }

/* Roboto */
@font-face {
  font-family: 'Roboto';
  font-weight: 300;
  font-style: normal;
  src: url("../fonts/Roboto/Roboto-300.eot");
  src: url("../fonts/Roboto/Roboto-300.eot?#iefix") format("embedded-opentype"), local("Roboto Light"), local("Roboto-300"), url("../fonts/Roboto/Roboto-300.woff2") format("woff2"), url("../fonts/Roboto/Roboto-300.woff") format("woff"), url("../fonts/Roboto/Roboto-300.ttf") format("truetype"), url("../fonts/Roboto/Roboto-300.svg#Roboto") format("svg"); }

@font-face {
  font-family: 'Roboto';
  font-weight: 400;
  font-style: normal;
  src: url("../fonts/Roboto/Roboto-regular.eot");
  src: url("../fonts/Roboto/Roboto-regular.eot?#iefix") format("embedded-opentype"), local("Roboto"), local("Roboto-regular"), url("../fonts/Roboto/Roboto-regular.woff2") format("woff2"), url("../fonts/Roboto/Roboto-regular.woff") format("woff"), url("../fonts/Roboto/Roboto-regular.ttf") format("truetype"), url("../fonts/Roboto/Roboto-regular.svg#Roboto") format("svg"); }

@font-face {
  font-family: 'Roboto';
  font-weight: 500;
  font-style: normal;
  src: url("../fonts/Roboto/Roboto-500.eot");
  src: url("../fonts/Roboto/Roboto-500.eot?#iefix") format("embedded-opentype"), local("Roboto Medium"), local("Roboto-500"), url("../fonts/Roboto/Roboto-500.woff2") format("woff2"), url("../fonts/Roboto/Roboto-500.woff") format("woff"), url("../fonts/Roboto/Roboto-500.ttf") format("truetype"), url("../fonts/Roboto/Roboto-500.svg#Roboto") format("svg"); }

@font-face {
  font-family: 'Roboto';
  font-weight: 700;
  font-style: normal;
  src: url("../fonts/Roboto/Roboto-700.eot");
  src: url("../fonts/Roboto/Roboto-700.eot?#iefix") format("embedded-opentype"), local("Roboto Bold"), local("Roboto-700"), url("../fonts/Roboto/Roboto-700.woff2") format("woff2"), url("../fonts/Roboto/Roboto-700.woff") format("woff"), url("../fonts/Roboto/Roboto-700.ttf") format("truetype"), url("../fonts/Roboto/Roboto-700.svg#Roboto") format("svg"); }

@font-face {
  font-family: 'Roboto';
  font-weight: 400;
  font-style: italic;
  src: url("../fonts/Roboto/Roboto-italic.eot");
  src: url("../fonts/Roboto/Roboto-italic.eot?#iefix") format("embedded-opentype"), local("Roboto"), local("Roboto-italic"), url("../fonts/Roboto/Roboto-italic.woff2") format("woff2"), url("../fonts/Roboto/Roboto-italic.woff") format("woff"), url("../fonts/Roboto/Roboto-italic.ttf") format("truetype"), url("../fonts/Roboto/Roboto-italic.svg#Roboto") format("svg"); }

/* material icons */
@font-face {
  font-family: 'Material Icons';
  font-style: normal;
  font-weight: 400;
  src: url("../fonts/MaterialIcons-Regular.eot");
  /* For IE6-8 */
  src: local("Material Icons"), local("MaterialIcons-Regular"), url("../fonts/MaterialIcons-Regular.woff2") format("woff2"), url("../fonts/MaterialIcons-Regular.woff") format("woff"), url("../fonts/MaterialIcons-Regular.ttf") format("truetype"); }

.material-icons {
  font-family: 'Material Icons';
  font-weight: normal;
  font-style: normal;
  font-size: 24px;
  /* Preferred icon size */
  display: inline-block;
  line-height: 1;
  text-transform: none;
  letter-spacing: normal;
  word-wrap: normal;
  white-space: nowrap;
  direction: ltr;
  /* Support for all WebKit browsers. */
  -webkit-font-smoothing: antialiased;
  /* Support for Safari and Chrome. */
  text-rendering: optimizeLegibility;
  /* Support for Firefox. */
  -moz-osx-font-smoothing: grayscale;
  /* Support for IE. */
  -webkit-font-feature-settings: 'liga';
          font-feature-settings: 'liga'; }

.ng-layouts-app .multientry-items .multientry-item .icon-close, .nl-modal-mask .nl-modal .close-modal, .nl-modal-mask form input[type="checkbox"] + label::before, #rules input[type='checkbox'] + label::before, .nl-rule .rule-details::after, .nl-rule .settings-list .settings-value.editable-value::after, .js-change-layouts-view::before, .nl-layout-export-checkbox input + label::before {
  font-family: 'Material Icons';
  font-weight: normal;
  font-style: normal;
  font-size: 24px;
  line-height: 1;
  letter-spacing: normal;
  text-transform: none;
  display: inline-block;
  white-space: nowrap;
  word-wrap: normal;
  direction: ltr;
  -webkit-font-feature-settings: 'liga';
  -webkit-font-smoothing: antialiased; }

.nl-rule.show-body .nl-rule-body, .nl-rule.show-actions .nl-rule-actions {
  -webkit-animation: fadeIn 350ms ease-out;
          animation: fadeIn 350ms ease-out; }

@-webkit-keyframes fadeIn {
  from {
    opacity: 0; }
  top {
    opacity: 1; } }

@keyframes fadeIn {
  from {
    opacity: 0; }
  top {
    opacity: 1; } }

.nl-grid {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin-left: -20px;
  margin-right: -20px; }
  .nl-grid > [class^='col-'] {
    padding-left: 20px;
    padding-right: 20px;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
    width: 100%; }
  .nl-grid .col-xxs1 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 8.3333333333%;
            flex: 0 0 8.3333333333%;
    max-width: 8.3333333333%; }
  .nl-grid .col-xxs2 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 16.666666667%;
            flex: 0 0 16.666666667%;
    max-width: 16.666666667%; }
  .nl-grid .col-xxs3 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 25%;
            flex: 0 0 25%;
    max-width: 25%; }
  .nl-grid .col-xxs4 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 33.333333333%;
            flex: 0 0 33.333333333%;
    max-width: 33.333333333%; }
  .nl-grid .col-xxs5 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 41.666666667%;
            flex: 0 0 41.666666667%;
    max-width: 41.666666667%; }
  .nl-grid .col-xxs6 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 50%;
            flex: 0 0 50%;
    max-width: 50%; }
  .nl-grid .col-xxs7 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 58.333333333%;
            flex: 0 0 58.333333333%;
    max-width: 58.333333333%; }
  .nl-grid .col-xxs8 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 66.666666666%;
            flex: 0 0 66.666666666%;
    max-width: 66.666666666%; }
  .nl-grid .col-xxs9 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 75%;
            flex: 0 0 75%;
    max-width: 75%; }
  .nl-grid .col-xxs10 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 83.333333333%;
            flex: 0 0 83.333333333%;
    max-width: 83.333333333%; }
  .nl-grid .col-xxs11 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 91.666666666%;
            flex: 0 0 91.666666666%;
    max-width: 91.666666666%; }
  .nl-grid .col-xxs12 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%; }
  @media screen and (min-width: 480px) {
    .nl-grid .col-xs1 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 8.3333333333%;
              flex: 0 0 8.3333333333%;
      max-width: 8.3333333333%; }
    .nl-grid .col-xs2 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 16.666666667%;
              flex: 0 0 16.666666667%;
      max-width: 16.666666667%; }
    .nl-grid .col-xs3 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 25%;
              flex: 0 0 25%;
      max-width: 25%; }
    .nl-grid .col-xs4 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 33.333333333%;
              flex: 0 0 33.333333333%;
      max-width: 33.333333333%; }
    .nl-grid .col-xs5 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 41.666666667%;
              flex: 0 0 41.666666667%;
      max-width: 41.666666667%; }
    .nl-grid .col-xs6 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 50%;
              flex: 0 0 50%;
      max-width: 50%; }
    .nl-grid .col-xs7 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 58.333333333%;
              flex: 0 0 58.333333333%;
      max-width: 58.333333333%; }
    .nl-grid .col-xs8 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 66.666666666%;
              flex: 0 0 66.666666666%;
      max-width: 66.666666666%; }
    .nl-grid .col-xs9 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 75%;
              flex: 0 0 75%;
      max-width: 75%; }
    .nl-grid .col-xs10 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 83.333333333%;
              flex: 0 0 83.333333333%;
      max-width: 83.333333333%; }
    .nl-grid .col-xs11 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 91.666666666%;
              flex: 0 0 91.666666666%;
      max-width: 91.666666666%; }
    .nl-grid .col-xs12 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 100%;
              flex: 0 0 100%; } }
  @media screen and (min-width: 768px) {
    .nl-grid .col-s1 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 8.3333333333%;
              flex: 0 0 8.3333333333%;
      max-width: 8.3333333333%; }
    .nl-grid .col-s2 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 16.666666667%;
              flex: 0 0 16.666666667%;
      max-width: 16.666666667%; }
    .nl-grid .col-s3 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 25%;
              flex: 0 0 25%;
      max-width: 25%; }
    .nl-grid .col-s4 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 33.333333333%;
              flex: 0 0 33.333333333%;
      max-width: 33.333333333%; }
    .nl-grid .col-s5 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 41.666666667%;
              flex: 0 0 41.666666667%;
      max-width: 41.666666667%; }
    .nl-grid .col-s6 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 50%;
              flex: 0 0 50%;
      max-width: 50%; }
    .nl-grid .col-s7 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 58.333333333%;
              flex: 0 0 58.333333333%;
      max-width: 58.333333333%; }
    .nl-grid .col-s8 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 66.666666666%;
              flex: 0 0 66.666666666%;
      max-width: 66.666666666%; }
    .nl-grid .col-s9 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 75%;
              flex: 0 0 75%;
      max-width: 75%; }
    .nl-grid .col-s10 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 83.333333333%;
              flex: 0 0 83.333333333%;
      max-width: 83.333333333%; }
    .nl-grid .col-s11 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 91.666666666%;
              flex: 0 0 91.666666666%;
      max-width: 91.666666666%; }
    .nl-grid .col-s12 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 100%;
              flex: 0 0 100%; } }
  @media screen and (min-width: 992px) {
    .nl-grid .col-m1 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 8.3333333333%;
              flex: 0 0 8.3333333333%;
      max-width: 8.3333333333%; }
    .nl-grid .col-m2 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 16.666666667%;
              flex: 0 0 16.666666667%;
      max-width: 16.666666667%; }
    .nl-grid .col-m3 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 25%;
              flex: 0 0 25%;
      max-width: 25%; }
    .nl-grid .col-m4 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 33.333333333%;
              flex: 0 0 33.333333333%;
      max-width: 33.333333333%; }
    .nl-grid .col-m5 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 41.666666667%;
              flex: 0 0 41.666666667%;
      max-width: 41.666666667%; }
    .nl-grid .col-m6 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 50%;
              flex: 0 0 50%;
      max-width: 50%; }
    .nl-grid .col-m7 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 58.333333333%;
              flex: 0 0 58.333333333%;
      max-width: 58.333333333%; }
    .nl-grid .col-m8 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 66.666666666%;
              flex: 0 0 66.666666666%;
      max-width: 66.666666666%; }
    .nl-grid .col-m9 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 75%;
              flex: 0 0 75%;
      max-width: 75%; }
    .nl-grid .col-m10 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 83.333333333%;
              flex: 0 0 83.333333333%;
      max-width: 83.333333333%; }
    .nl-grid .col-m11 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 91.666666666%;
              flex: 0 0 91.666666666%;
      max-width: 91.666666666%; }
    .nl-grid .col-m12 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 100%;
              flex: 0 0 100%; } }
  @media screen and (min-width: 1200px) {
    .nl-grid .col-l1 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 8.3333333333%;
              flex: 0 0 8.3333333333%;
      max-width: 8.3333333333%; }
    .nl-grid .col-l2 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 16.666666667%;
              flex: 0 0 16.666666667%;
      max-width: 16.666666667%; }
    .nl-grid .col-l3 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 25%;
              flex: 0 0 25%;
      max-width: 25%; }
    .nl-grid .col-l4 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 33.333333333%;
              flex: 0 0 33.333333333%;
      max-width: 33.333333333%; }
    .nl-grid .col-l5 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 41.666666667%;
              flex: 0 0 41.666666667%;
      max-width: 41.666666667%; }
    .nl-grid .col-l6 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 50%;
              flex: 0 0 50%;
      max-width: 50%; }
    .nl-grid .col-l7 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 58.333333333%;
              flex: 0 0 58.333333333%;
      max-width: 58.333333333%; }
    .nl-grid .col-l8 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 66.666666666%;
              flex: 0 0 66.666666666%;
      max-width: 66.666666666%; }
    .nl-grid .col-l9 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 75%;
              flex: 0 0 75%;
      max-width: 75%; }
    .nl-grid .col-l10 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 83.333333333%;
              flex: 0 0 83.333333333%;
      max-width: 83.333333333%; }
    .nl-grid .col-l11 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 91.666666666%;
              flex: 0 0 91.666666666%;
      max-width: 91.666666666%; }
    .nl-grid .col-l12 {
      -webkit-box-flex: 0;
          -ms-flex: 0 0 100%;
              flex: 0 0 100%; } }

html,
body {
  height: 100%; }

.nl-rules {
  position: relative; }

.layouts-controls {
  margin: 0 0 1em;
  text-align: right; }
  .layouts-controls .sorting-show {
    display: none; }
  .layout-export .layouts-controls {
    display: none; }

.export-layouts-controls {
  display: none;
  float: right;
  margin: 0 0 1em;
  text-align: right; }
  .layout-export .export-layouts-controls {
    display: block; }

.ng-layouts-app {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  background-color: whitesmoke;
  font-family: "Roboto", Helvetica, Arial, sans-serif;
  font-size: 16px;
  line-height: 1.5;
  color: #404040;
  min-height: 100%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }
  .ng-layouts-app * {
    -webkit-box-sizing: border-box;
            box-sizing: border-box; }
  .ng-layouts-app.ajax-loading,
  .ng-layouts-app.ajax-loading * {
    cursor: wait !important; }
  .ng-layouts-app a:not(.nl-btn) {
    color: #0098c7; }
  .ng-layouts-app h1 {
    font-size: 1.625em;
    margin: 1em 0 3em; }
  .ng-layouts-app .ng-layouts-container {
    margin: 0 auto;
    max-width: 1200px;
    width: 98%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }
  .ng-layouts-app .layouts-sidebar {
    width: 20%;
    background: #e6e5e5; }
    .ng-layouts-app .layouts-sidebar .main-menu {
      padding-top: 40px; }
      .ng-layouts-app .layouts-sidebar .main-menu > ul {
        list-style-type: none;
        padding: 0;
        margin: 0; }
        .ng-layouts-app .layouts-sidebar .main-menu > ul > li {
          border-bottom: 1px solid rgba(0, 0, 0, 0.02); }
          .ng-layouts-app .layouts-sidebar .main-menu > ul > li:first-child {
            border-top: 1px solid rgba(0, 0, 0, 0.02); }
          .ng-layouts-app .layouts-sidebar .main-menu > ul > li > a {
            padding: 10px 15px;
            display: block;
            font-size: 0.875em;
            font-weight: 300;
            text-decoration: none; }
            .ng-layouts-app .layouts-sidebar .main-menu > ul > li > a:hover {
              background: rgba(0, 0, 0, 0.02); }
          .ng-layouts-app .layouts-sidebar .main-menu > ul > li.current > a {
            background: whitesmoke;
            color: #ec417a;
            cursor: default; }
  .ng-layouts-app .layouts-content {
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
    padding: 30px;
    position: relative; }
  .ng-layouts-app.sorting .layouts-controls .sorting-show {
    display: inline-block; }
  .ng-layouts-app.sorting .layouts-controls .sorting-hide,
  .ng-layouts-app.sorting .layouts-controls .nl-filter-dropdown {
    display: none !important; }
  .ng-layouts-app.sorting .js-add-rule {
    display: none; }
  .ng-layouts-app.sorting .nl-no-filtered-items {
    display: none !important; }
  .ng-layouts-app .multientry-items .multientry-item {
    position: relative; }
    .ng-layouts-app .multientry-items .multientry-item .icon-close {
      position: absolute;
      right: 6px;
      top: 9px;
      width: 18px;
      height: 18px;
      line-height: 18px;
      font-size: 14px;
      cursor: pointer;
      text-align: center;
      -webkit-transition: background 0.15s;
      -o-transition: background 0.15s;
      transition: background 0.15s; }
      .ng-layouts-app .multientry-items .multientry-item .icon-close::before {
        content: "clear"; }
      .ng-layouts-app .multientry-items .multientry-item .icon-close:hover {
        background: rgba(0, 0, 0, 0.05); }
    .ng-layouts-app .multientry-items .multientry-item input[type=text] {
      padding-right: 3em; }
    .ng-layouts-app .multientry-items .multientry-item:first-child:nth-last-child(1) .icon-close {
      display: none; }
  .ng-layouts-app .multientry[data-last_item_can_be_removed="true"] .multientry-items .multientry-item .icon-close {
    display: block; }
  .ng-layouts-app .multientry .no-items-msg {
    display: none;
    font-size: 13px;
    padding: .5em;
    background: #f1f1f1;
    margin: 0 0 1em; }
  .ng-layouts-app .multientry.show-message .no-items-msg {
    display: block; }

.layouts-header {
  margin: 0 0 2em; }
  .layouts-header .layouts-title {
    font-size: 21px;
    font-weight: 400;
    margin: 0;
    float: left; }
  .layouts-header .layouts-controls {
    float: right; }
    .layouts-header .layouts-controls .nl-dropdown {
      display: inline-block; }
  .layouts-header::after {
    content: "";
    display: table;
    clear: both; }
  .layouts-header p {
    clear: both;
    font-size: 14px; }

.nl-modal-mask {
  position: fixed;
  z-index: 1000;
  background: rgba(0, 0, 0, 0.5);
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  padding: 15px;
  -webkit-animation: maskFadeIn 0.2s;
          animation: maskFadeIn 0.2s; }
  .nl-modal-mask * {
    -webkit-box-sizing: border-box;
            box-sizing: border-box; }
  .nl-modal-mask .nl-modal {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    background: #fff;
    border-radius: 0px;
    width: 500px;
    max-width: 98%;
    max-height: 98%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-animation: modalSlide 0.4s ease-out;
            animation: modalSlide 0.4s ease-out; }
    .nl-modal-mask .nl-modal .close-modal {
      position: absolute;
      right: 15px;
      top: 16px;
      display: block;
      color: #fff;
      border: none;
      padding: 0;
      font-size: 24px;
      text-align: center;
      background: transparent;
      text-decoration: none; }
      .nl-modal-mask .nl-modal .close-modal::before {
        content: "clear"; }
    .nl-modal-mask .nl-modal .nl-modal-body {
      padding: 25px 15px;
      overflow-y: auto;
      font-size: 16px; }
    .nl-modal-mask .nl-modal .nl-modal-head {
      padding: 15px 35px 15px 15px;
      background: #404040;
      color: #fff;
      border-radius: 0px 0px 0 0;
      font-size: 20px;
      min-height: 58px; }
    .nl-modal-mask .nl-modal .nl-modal-actions {
      padding: 15px;
      text-align: right;
      border-top: 1px solid rgba(0, 0, 0, 0.1); }
      .nl-modal-mask .nl-modal .nl-modal-actions .nl-btn {
        margin-left: .5em; }
    .nl-modal-mask .nl-modal .errors {
      list-style-type: none;
      margin: -0.5em 0 1.5em;
      padding: 0;
      font-size: 15px; }
      .nl-modal-mask .nl-modal .errors li {
        color: red; }
  .nl-modal-mask form label {
    display: block;
    font-weight: normal;
    font-size: 14px;
    margin: 0 0 4px; }
  .nl-modal-mask form input[type="text"],
  .nl-modal-mask form input[type="number"],
  .nl-modal-mask form input[type="url"],
  .nl-modal-mask form input[type="email"],
  .nl-modal-mask form textarea {
    display: block;
    margin: 0 0 1em;
    border-radius: 2px;
    width: 100%;
    padding: 0 0.75em;
    font-size: 14px;
    height: 44px;
    border: 1px solid #b3b2b2;
    background: #fff; }
    .nl-modal-mask form input[type="text"]::-webkit-input-placeholder,
    .nl-modal-mask form input[type="number"]::-webkit-input-placeholder,
    .nl-modal-mask form input[type="url"]::-webkit-input-placeholder,
    .nl-modal-mask form input[type="email"]::-webkit-input-placeholder,
    .nl-modal-mask form textarea::-webkit-input-placeholder {
      color: #b3b2b2; }
    .nl-modal-mask form input[type="text"]:-ms-input-placeholder,
    .nl-modal-mask form input[type="number"]:-ms-input-placeholder,
    .nl-modal-mask form input[type="url"]:-ms-input-placeholder,
    .nl-modal-mask form input[type="email"]:-ms-input-placeholder,
    .nl-modal-mask form textarea:-ms-input-placeholder {
      color: #b3b2b2; }
    .nl-modal-mask form input[type="text"]::-ms-input-placeholder,
    .nl-modal-mask form input[type="number"]::-ms-input-placeholder,
    .nl-modal-mask form input[type="url"]::-ms-input-placeholder,
    .nl-modal-mask form input[type="email"]::-ms-input-placeholder,
    .nl-modal-mask form textarea::-ms-input-placeholder {
      color: #b3b2b2; }
    .nl-modal-mask form input[type="text"]::placeholder,
    .nl-modal-mask form input[type="number"]::placeholder,
    .nl-modal-mask form input[type="url"]::placeholder,
    .nl-modal-mask form input[type="email"]::placeholder,
    .nl-modal-mask form textarea::placeholder {
      color: #b3b2b2; }
  .nl-modal-mask form textarea {
    height: auto;
    min-height: 120px;
    padding-top: 0.375em;
    resize: vertical; }
  .nl-modal-mask form input[type="checkbox"] {
    position: absolute;
    left: -9999em; }
    .nl-modal-mask form input[type="checkbox"] + label {
      display: block;
      position: relative;
      padding: 0.3846153846em 0.3846153846em 0.3846153846em 2em !important;
      margin: 0 0 0.5em;
      cursor: pointer; }
      .nl-modal-mask form input[type="checkbox"] + label::before {
        font-size: 24px;
        content: "check_box_outline_blank";
        position: absolute;
        left: 0;
        top: 0.1em;
        color: #666666; }
    .nl-modal-mask form input[type="checkbox"]:checked + label::before {
      content: "check_box";
      color: #0098c7; }
    .nl-modal-mask form input[type="checkbox"]:indeterminate + label::before {
      content: "indeterminate_check_box"; }
  .nl-modal-mask .form-actions {
    text-align: right; }
  .nl-modal-mask .nl-modal-loader {
    color: #fff;
    font-size: 14px;
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    display: none; }
  .nl-modal-mask.modal-loading .nl-modal-loader {
    display: block; }
  .nl-modal-mask.modal-loading .nl-modal {
    display: none; }

@-webkit-keyframes maskFadeIn {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

@keyframes maskFadeIn {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

@-webkit-keyframes modalSlide {
  from {
    margin-top: 50px;
    opacity: 0; }
  top {
    margin-top: 0;
    opacity: 1; } }

@keyframes modalSlide {
  from {
    margin-top: 50px;
    opacity: 0; }
  top {
    margin-top: 0;
    opacity: 1; } }

.nl-tooltip {
  display: none;
  position: fixed;
  width: 300px;
  z-index: 1010; }
  .nl-tooltip .nl-tooltip-inner {
    background: rgba(51, 51, 51, 0.9);
    color: #fff;
    text-align: center;
    font-size: 10px;
    padding: 0.5em 1em;
    font-weight: 200;
    position: absolute;
    border-radius: 2px; }
    .nl-tooltip .nl-tooltip-inner::before {
      content: "";
      width: 0;
      height: 0;
      position: absolute;
      display: block; }
  .nl-tooltip.nl-tooltip-top .nl-tooltip-inner, .nl-tooltip.nl-tooltip-bottom .nl-tooltip-inner {
    left: 0;
    -webkit-transform: translateX(-50%);
        -ms-transform: translateX(-50%);
            transform: translateX(-50%); }
    .nl-tooltip.nl-tooltip-top .nl-tooltip-inner::before, .nl-tooltip.nl-tooltip-bottom .nl-tooltip-inner::before {
      left: 50%;
      -webkit-transform: translateX(-50%);
          -ms-transform: translateX(-50%);
              transform: translateX(-50%);
      border-left: 4px solid transparent;
      border-right: 4px solid transparent; }
  .nl-tooltip.nl-tooltip-top .nl-tooltip-inner {
    bottom: 10px; }
    .nl-tooltip.nl-tooltip-top .nl-tooltip-inner::before {
      top: 100%;
      border-top: 6px solid rgba(51, 51, 51, 0.9); }
  .nl-tooltip.nl-tooltip-bottom .nl-tooltip-inner {
    top: 10px; }
    .nl-tooltip.nl-tooltip-bottom .nl-tooltip-inner::before {
      bottom: 100%;
      border-bottom: 6px solid rgba(51, 51, 51, 0.9); }
  .nl-tooltip.nl-tooltip-left .nl-tooltip-inner, .nl-tooltip.nl-tooltip-right .nl-tooltip-inner {
    top: 0;
    -webkit-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
            transform: translateY(-50%); }
    .nl-tooltip.nl-tooltip-left .nl-tooltip-inner::before, .nl-tooltip.nl-tooltip-right .nl-tooltip-inner::before {
      top: 50%;
      -webkit-transform: translateY(-50%);
          -ms-transform: translateY(-50%);
              transform: translateY(-50%);
      border-top: 4px solid transparent;
      border-bottom: 4px solid transparent; }
  .nl-tooltip.nl-tooltip-left .nl-tooltip-inner {
    right: 10px; }
    .nl-tooltip.nl-tooltip-left .nl-tooltip-inner::before {
      left: 100%;
      border-left: 6px solid rgba(51, 51, 51, 0.9); }
  .nl-tooltip.nl-tooltip-right .nl-tooltip-inner {
    left: 10px; }
    .nl-tooltip.nl-tooltip-right .nl-tooltip-inner::before {
      right: 100%;
      border-right: 6px solid rgba(51, 51, 51, 0.9); }
  .nl-tooltip.nl-tooltip-active {
    display: block;
    -webkit-animation: showTT 200ms ease-out;
            animation: showTT 200ms ease-out; }

@-webkit-keyframes showTT {
  from {
    opacity: 0; }
  top {
    opacity: 1; } }

@keyframes showTT {
  from {
    opacity: 0; }
  top {
    opacity: 1; } }

.nl-dropdown {
  position: relative; }
  .nl-dropdown[data-position='right'] {
    text-align: right; }
    .nl-dropdown[data-position='right'] .nl-dropdown-menu {
      right: 0;
      left: auto; }
  .nl-dropdown .nl-dropdown-menu {
    visibility: hidden;
    position: absolute;
    bottom: 100%;
    left: 0;
    border-radius: 0;
    background: #404040;
    color: #fff;
    z-index: -10;
    margin: 0;
    padding: .5em 0;
    list-style-type: none; }
    .nl-dropdown .nl-dropdown-menu > li {
      padding: 0;
      margin: 0; }
      .nl-dropdown .nl-dropdown-menu > li > a,
      .nl-dropdown .nl-dropdown-menu > li > span,
      .nl-dropdown .nl-dropdown-menu > li > button {
        display: block;
        font-size: 13px;
        padding: .6em 1em;
        white-space: nowrap;
        text-decoration: none;
        -webkit-transition: background-color .2s ease;
        -o-transition: background-color .2s ease;
        transition: background-color .2s ease;
        border: 0;
        background: transparent;
        width: 100%;
        text-align: inherit; }
        .nl-dropdown .nl-dropdown-menu > li > a[disabled],
        .nl-dropdown .nl-dropdown-menu > li > span[disabled],
        .nl-dropdown .nl-dropdown-menu > li > button[disabled] {
          opacity: .2;
          cursor: default; }
      .nl-dropdown .nl-dropdown-menu > li > a,
      .nl-dropdown .nl-dropdown-menu > li > button {
        color: inherit; }
        .nl-dropdown .nl-dropdown-menu > li > a:hover:not([disabled]),
        .nl-dropdown .nl-dropdown-menu > li > button:hover:not([disabled]) {
          background: rgba(255, 255, 255, 0.05); }
        .nl-dropdown .nl-dropdown-menu > li > a .note,
        .nl-dropdown .nl-dropdown-menu > li > button .note {
          display: block;
          font-size: .6923076923em;
          color: #a6a6a6; }
  .nl-dropdown.nl-dropdown-active .nl-dropdown-menu {
    visibility: visible;
    z-index: 1000;
    top: 100%;
    bottom: auto;
    -webkit-animation: showDropdown 200ms ease-out;
            animation: showDropdown 200ms ease-out; }
  .nl-dropdown.nl-dropdown-active.nl-dropdown-top .nl-dropdown-menu {
    top: auto;
    bottom: 100%; }
  .nl-dropdown.nl-dropdown-active .nl-dropdown-toggle,
  .nl-dropdown.nl-dropdown-active .nl-dropdown-toggle:hover {
    background: #404040;
    color: #fff; }
  .nl-dropdown .checkbox {
    text-align: left;
    padding: 0 1em;
    font-size: 13px; }
    .nl-dropdown .checkbox label {
      white-space: nowrap; }
  .nl-dropdown .filter-checked-amount {
    display: inline-block;
    position: absolute;
    right: 1em;
    top: 0;
    font-size: 10px;
    padding: .5em;
    min-width: 2em;
    font-weight: 700;
    text-align: center;
    line-height: 1;
    -webkit-transform: translate3d(0, -50%, 0);
            transform: translate3d(0, -50%, 0);
    background: #F3590A;
    color: #fff;
    border-radius: 500em;
    z-index: 2; }

@-webkit-keyframes showDropdown {
  from {
    opacity: 0; }
  top {
    opacity: 1; } }

@keyframes showDropdown {
  from {
    opacity: 0; }
  top {
    opacity: 1; } }

.nl-btn {
  background: 0 0;
  border: none;
  border-radius: 2px;
  color: #404040;
  position: relative;
  height: 36px;
  margin: 0;
  min-width: 64px;
  padding: 0 12px;
  display: inline-block;
  font-family: "Roboto", Helvetica, Arial, sans-serif;
  font-size: 13px;
  overflow: hidden;
  will-change: box-shadow;
  -webkit-transition: background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1), color 0.2s cubic-bezier(0.4, 0, 0.2, 1), -webkit-box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1);
  transition: background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1), color 0.2s cubic-bezier(0.4, 0, 0.2, 1), -webkit-box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1);
  -o-transition: box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1), background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1), color 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  transition: box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1), background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1), color 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  transition: box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1), background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1), color 0.2s cubic-bezier(0.4, 0, 0.2, 1), -webkit-box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1);
  outline: none;
  cursor: pointer;
  text-decoration: none;
  text-align: center;
  line-height: 36px;
  vertical-align: middle; }
  .nl-btn:hover {
    background: rgba(158, 158, 158, 0.2);
    text-decoration: none; }
  .nl-btn:focus:not(:active) {
    background: rgba(158, 158, 158, 0.3); }
  .nl-btn:active {
    background: rgba(158, 158, 158, 0.4); }
  .nl-btn.nl-btn-link {
    color: #0098c7; }
  .nl-btn.nl-btn-icon {
    border-radius: 50%;
    width: 36px;
    min-width: 36px;
    padding: 0;
    font-size: 24px; }
    .nl-btn.nl-btn-icon i {
      font-size: inherit;
      display: block; }
  .nl-btn.nl-btn-primary {
    background: #0098c7;
    color: #fff; }
    .nl-btn.nl-btn-primary:hover {
      background: #0089b3; }
    .nl-btn.nl-btn-primary:focus:not(:active) {
      background: #0085ad; }
    .nl-btn.nl-btn-primary:active {
      background: #0081a8; }
  .nl-btn.nl-btn-white {
    background: #fff; }
    .nl-btn.nl-btn-white:hover {
      background: rgba(158, 158, 158, 0.2); }
    .nl-btn.nl-btn-white:focus:not(:active) {
      background: rgba(158, 158, 158, 0.3); }
    .nl-btn.nl-btn-white:active {
      background: rgba(158, 158, 158, 0.4); }
  .nl-btn i {
    vertical-align: middle;
    font-size: 15px; }
  .nl-btn:disabled {
    opacity: 0.5; }
  .nl-dropdown-active > .nl-btn {
    border-radius: 2px 2px 0 0; }

.nl-select, .nl-rule .nl-rule-body form select:not([multiple]) {
  border: none;
  color: #404040;
  font-family: "Roboto", Helvetica, Arial, sans-serif;
  border-radius: 2px;
  height: 36px;
  padding: 4px 32px 4px 10px;
  font-size: 13px;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  cursor: pointer;
  background-color: whitesmoke;
  -webkit-transition: background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1), color 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1), color 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  transition: background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1), color 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  background-image: -o-linear-gradient(45deg, transparent 50%, gray 50%), -o-linear-gradient(315deg, gray 50%, transparent 50%);
  background-image: linear-gradient(45deg, transparent 50%, gray 50%), linear-gradient(135deg, gray 50%, transparent 50%);
  background-position: calc(100% - 16px) 50%, calc(100% - 11px) 50%;
  background-size: 4px 5px, 5px 5px;
  background-repeat: no-repeat;
  max-width: 100%;
  vertical-align: middle; }
  .nl-select:hover, .nl-rule .nl-rule-body form select:hover:not([multiple]) {
    background-color: #f0f0f0; }
  .nl-select:focus:not(:active), .nl-rule .nl-rule-body form select:focus:not(:active):not([multiple]) {
    outline: none;
    background-color: #ebebeb; }

.layout-icon {
  display: block;
  width: 50px;
  height: 75px;
  background-repeat: no-repeat;
  background-position: 50% 50%;
  background-size: contain; }
  .ngcb .preview-panel .layout-icon {
    width: 90%;
    height: 0;
    padding-bottom: 130%;
    margin: 1em auto 0;
    border: 2px solid #a1a1a1;
    background-size: 95%;
    border-radius: 3px; }

.loading-ng-icon, .nl-modal-mask .nl-modal-loader > span {
  display: inline-block;
  position: relative;
  font-size: 1em;
  width: 1.375em;
  height: 2.375em;
  margin: 0em 1.5em -0.3em;
  -webkit-transform: rotate(-48deg);
      -ms-transform: rotate(-48deg);
          transform: rotate(-48deg);
  -webkit-animation: loadRotate 1.5s infinite cubic-bezier(0.45, 0.05, 0.55, 0.95);
          animation: loadRotate 1.5s infinite cubic-bezier(0.45, 0.05, 0.55, 0.95); }
  .loading-ng-icon::before, .nl-modal-mask .nl-modal-loader > span::before, .loading-ng-icon::after, .nl-modal-mask .nl-modal-loader > span::after {
    content: "";
    display: block;
    background: currentColor;
    border-radius: 50%;
    position: absolute;
    left: 50%; }
  .loading-ng-icon::before, .nl-modal-mask .nl-modal-loader > span::before {
    width: 1em;
    height: 1em;
    margin-left: -0.5em;
    bottom: 1.375em;
    -webkit-animation: loadBounceTopSquash 0.75s alternate infinite ease, loadBounceTopFlow 0.75s alternate infinite ease;
            animation: loadBounceTopSquash 0.75s alternate infinite ease, loadBounceTopFlow 0.75s alternate infinite ease; }
  .loading-ng-icon::after, .nl-modal-mask .nl-modal-loader > span::after {
    width: 1.375em;
    height: 1.375em;
    margin-left: -0.6875em;
    bottom: 0;
    -webkit-animation: loadBounceBottomSquash 0.75s alternate infinite ease, loadBounceBottomFlow 0.75s alternate infinite ease;
            animation: loadBounceBottomSquash 0.75s alternate infinite ease, loadBounceBottomFlow 0.75s alternate infinite ease; }

@-webkit-keyframes loadBounceTopSquash {
  0% {
    height: 0.375em;
    border-radius: 3.75em 3.75em 1.25em 1.25em;
    -webkit-transform: scaleX(2);
            transform: scaleX(2); }
  15% {
    height: 1em;
    border-radius: 50%;
    -webkit-transform: scaleX(1);
            transform: scaleX(1); }
  100% {
    height: 1em;
    border-radius: 50%;
    -webkit-transform: scaleX(1);
            transform: scaleX(1); } }

@keyframes loadBounceTopSquash {
  0% {
    height: 0.375em;
    border-radius: 3.75em 3.75em 1.25em 1.25em;
    -webkit-transform: scaleX(2);
            transform: scaleX(2); }
  15% {
    height: 1em;
    border-radius: 50%;
    -webkit-transform: scaleX(1);
            transform: scaleX(1); }
  100% {
    height: 1em;
    border-radius: 50%;
    -webkit-transform: scaleX(1);
            transform: scaleX(1); } }

@-webkit-keyframes loadBounceBottomSquash {
  0% {
    height: 1em;
    border-radius: 1.25em 1.25em 3.75em 3.75em;
    -webkit-transform: scaleX(1.5);
            transform: scaleX(1.5); }
  15% {
    height: 1.375em;
    border-radius: 50%;
    -webkit-transform: scaleX(1);
            transform: scaleX(1); }
  100% {
    height: 1.375em;
    border-radius: 50%;
    -webkit-transform: scaleX(1);
            transform: scaleX(1); } }

@keyframes loadBounceBottomSquash {
  0% {
    height: 1em;
    border-radius: 1.25em 1.25em 3.75em 3.75em;
    -webkit-transform: scaleX(1.5);
            transform: scaleX(1.5); }
  15% {
    height: 1.375em;
    border-radius: 50%;
    -webkit-transform: scaleX(1);
            transform: scaleX(1); }
  100% {
    height: 1.375em;
    border-radius: 50%;
    -webkit-transform: scaleX(1);
            transform: scaleX(1); } }

@-webkit-keyframes loadBounceTopFlow {
  0% {
    bottom: 1.125em; }
  50% {
    bottom: 2.25em;
    -webkit-animation-timing-function: cubic-bezier(0.55, 0.06, 0.68, 0.19);
            animation-timing-function: cubic-bezier(0.55, 0.06, 0.68, 0.19); }
  90% {
    bottom: 1.75em; }
  100% {
    bottom: 1.75em; } }

@keyframes loadBounceTopFlow {
  0% {
    bottom: 1.125em; }
  50% {
    bottom: 2.25em;
    -webkit-animation-timing-function: cubic-bezier(0.55, 0.06, 0.68, 0.19);
            animation-timing-function: cubic-bezier(0.55, 0.06, 0.68, 0.19); }
  90% {
    bottom: 1.75em; }
  100% {
    bottom: 1.75em; } }

@-webkit-keyframes loadBounceBottomFlow {
  0% {
    bottom: 0.1875em; }
  50% {
    bottom: -0.9375em;
    -webkit-animation-timing-function: cubic-bezier(0.55, 0.06, 0.68, 0.19);
            animation-timing-function: cubic-bezier(0.55, 0.06, 0.68, 0.19); }
  90% {
    bottom: 0em; }
  100% {
    bottom: 0em; } }

@keyframes loadBounceBottomFlow {
  0% {
    bottom: 0.1875em; }
  50% {
    bottom: -0.9375em;
    -webkit-animation-timing-function: cubic-bezier(0.55, 0.06, 0.68, 0.19);
            animation-timing-function: cubic-bezier(0.55, 0.06, 0.68, 0.19); }
  90% {
    bottom: 0em; }
  100% {
    bottom: 0em; } }

@-webkit-keyframes loadRotate {
  0% {
    -webkit-transform: rotate(-228deg);
            transform: rotate(-228deg); }
  49% {
    -webkit-transform: rotate(-48deg);
            transform: rotate(-48deg); }
  51% {
    -webkit-transform: rotate(-48deg);
            transform: rotate(-48deg); }
  92% {
    -webkit-transform: rotate(132deg);
            transform: rotate(132deg); }
  100% {
    -webkit-transform: rotate(132deg);
            transform: rotate(132deg); } }

@keyframes loadRotate {
  0% {
    -webkit-transform: rotate(-228deg);
            transform: rotate(-228deg); }
  49% {
    -webkit-transform: rotate(-48deg);
            transform: rotate(-48deg); }
  51% {
    -webkit-transform: rotate(-48deg);
            transform: rotate(-48deg); }
  92% {
    -webkit-transform: rotate(132deg);
            transform: rotate(132deg); }
  100% {
    -webkit-transform: rotate(132deg);
            transform: rotate(132deg); } }

#rules {
  visibility: hidden; }
  #rules input[type='checkbox'] {
    position: absolute;
    left: -9999em; }
    #rules input[type='checkbox'] + label {
      display: block;
      position: relative;
      padding: 0 0 0 1.75em;
      margin: .5em 0 1em;
      cursor: pointer;
      font-size: 1em;
      line-height: 1.4; }
      #rules input[type='checkbox'] + label::before {
        content: 'check_box_outline_blank';
        font-size: 18px;
        position: absolute;
        left: 0;
        top: 0; }
    #rules input[type='checkbox']:checked + label::before {
      content: 'check_box'; }

.nl-rules-head {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  font-size: 12px;
  color: #575757;
  padding: 0 0 2px; }
  .nl-rules-head .nl-rules-head-wrapper {
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    padding-left: 20px; }
  .nl-rules-head .rule-priority {
    text-transform: uppercase; }

.nl-rule-cell {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 4px 20px 4px 0; }
  .nl-rule-cell.rule-priority {
    width: 40px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    font-size: 12px;
    padding-right: 0; }
  .nl-rule-cell.rule-layout {
    width: 25%; }
  .nl-rule-cell.rule-targets {
    width: 25%;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-align: start;
        -ms-flex-align: start;
            align-items: flex-start;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center; }
  .nl-rule-cell.rule-conditions {
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-align: start;
        -ms-flex-align: start;
            align-items: flex-start;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    min-width: 0; }
    .nl-rule-cell.rule-conditions ul {
      line-height: 1.4;
      max-height: 4.2em;
      overflow: hidden;
      display: block;
      display: -webkit-box;
      -webkit-line-clamp: 3;
      -webkit-box-orient: vertical;
      -o-text-overflow: ellipsis;
         text-overflow: ellipsis;
      width: 100%; }
      .nl-rule-cell.rule-conditions ul.nl-inline {
        display: block; }
        .nl-rule-cell.rule-conditions ul.nl-inline > li {
          display: inline-block;
          margin-right: 2px; }
          .nl-rule-cell.rule-conditions ul.nl-inline > li::after {
            content: ',';
            display: inline-block; }
          .nl-rule-cell.rule-conditions ul.nl-inline > li:last-child::after {
            content: ''; }
      .nl-rule-cell.rule-conditions ul.nl-ellipsis > li {
        -o-text-overflow: ellipsis;
           text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden; }
  .nl-rule-cell p {
    margin: 0; }
  .nl-rule-cell ul {
    margin: 0;
    padding: 0;
    list-style-type: none; }
    .nl-rule-cell ul > li {
      margin: 0; }
    .nl-rule-cell ul .unique {
      font-weight: 700;
      color: #333333; }

.nl-rule {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  margin: 0 0 10px;
  font-size: 12px; }
  .nl-rule.nl-rule-hidden {
    display: none; }
  .nl-rule .rule-priority {
    -webkit-box-align: start;
        -ms-flex-align: start;
            align-items: flex-start;
    padding-top: 20px; }
  .nl-rule.show-body .nl-rule-body {
    display: block; }
  .nl-rule.show-body .rule-details::after {
    content: 'keyboard_arrow_up'; }
  .nl-rule.show-actions .nl-rule-actions {
    display: block; }
  .nl-rule.show-actions.show-body .nl-rule-actions {
    background: #e6e5e5; }
  .nl-rule .rule-details {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    cursor: pointer;
    padding: 20px 12px;
    background: #e6e5e5;
    line-height: 1.6666666667;
    color: #333333; }
    .nl-rule .rule-details::after {
      font-size: 16px;
      margin: 1px 0 0 .125em;
      content: 'keyboard_arrow_down'; }
  .nl-rule .nl-rule-head {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    padding-left: 20px;
    color: #666666; }
    .nl-rule .nl-rule-head .rule-layout {
      font-size: 14px;
      font-weight: 700;
      color: #333333; }
    .nl-rule .nl-rule-head .nl-dropdown {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-align: stretch;
          -ms-flex-align: stretch;
              align-items: stretch; }
      .nl-rule .nl-rule-head .nl-dropdown .nl-dropdown-toggle {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-align: center;
            -ms-flex-align: center;
                align-items: center;
        height: auto;
        min-width: auto;
        font-size: 24px;
        padding: 0 .75em;
        border-radius: 0; }
        .nl-rule .nl-rule-head .nl-dropdown .nl-dropdown-toggle i {
          font-size: inherit; }
    .nl-rule .nl-rule-head .no-layout {
      font-weight: 400;
      color: #999999;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-align: center;
          -ms-flex-align: center;
              align-items: center; }
      .nl-rule .nl-rule-head .no-layout a {
        border-left: 1px solid #e6e5e5;
        padding: .6em .6em .6em 1em;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        margin-left: 1em;
        text-decoration: none;
        -webkit-box-align: center;
            -ms-flex-align: center;
                align-items: center; }
        .nl-rule .nl-rule-head .no-layout a i {
          color: #b3b2b2;
          margin-right: .25em; }
  .nl-rule .nl-rule-body {
    display: none;
    padding: 20px;
    background: #e6e5e5; }
    .nl-rule .nl-rule-body h4 {
      font-size: 12px;
      font-weight: 700;
      margin: 0 0 1.6666666667em; }
    .nl-rule .nl-rule-body p.note {
      margin: 1.5em 0 0;
      font-style: italic; }
    .nl-rule .nl-rule-body .rule-layout-info {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
      -webkit-box-align: start;
          -ms-flex-align: start;
              align-items: flex-start; }
      .nl-rule .nl-rule-body .rule-layout-info .rule-layout-info-icon {
        margin-right: 12px;
        border: 1px solid #a1a1a1;
        padding: 2px;
        width: 56px;
        opacity: .65; }
        .nl-rule .nl-rule-body .rule-layout-info .rule-layout-info-icon .layout-icon {
          display: block;
          width: 100%;
          height: 0;
          padding-bottom: 150%; }
      .nl-rule .nl-rule-body .rule-layout-info .rule-layout-info-text {
        min-width: 80px;
        -webkit-box-flex: 1;
            -ms-flex: 1;
                flex: 1; }
        .nl-rule .nl-rule-body .rule-layout-info .rule-layout-info-text p {
          word-break: break-word; }
    .nl-rule .nl-rule-body form {
      background: whitesmoke;
      padding: .8em;
      margin: .5em 0;
      font-size: 13px; }
      .nl-rule .nl-rule-body form label {
        display: block;
        margin: 0 0 .25em;
        font-weight: 400;
        font-size: .9em; }
      .nl-rule .nl-rule-body form input[type='text'] {
        display: block;
        border: 0;
        padding: .5em;
        margin: 0 0 1em;
        width: 100%;
        line-height: 1.8; }
      .nl-rule .nl-rule-body form select:not([multiple]) {
        background-color: #fff;
        margin: 0 0 1em; }
      .nl-rule .nl-rule-body form select[multiple] {
        width: 100%;
        border: 0;
        margin: 0 0 1em; }
        .nl-rule .nl-rule-body form select[multiple] option {
          padding: .25em; }
      .nl-rule .nl-rule-body form .form-actions {
        text-align: right; }
      .nl-rule .nl-rule-body form .nl-btn {
        height: 28px;
        line-height: 28px; }
      .nl-rule .nl-rule-body form .js-input-browse .js-clear {
        background: #fff;
        border-radius: 0;
        border-right: 1px solid whitesmoke; }
        .nl-rule .nl-rule-body form .js-input-browse .js-clear:hover {
          background: #fafafa; }
      .nl-rule .nl-rule-body form .js-input-browse .js-trigger {
        background: #fff;
        color: inherit;
        height: 32px;
        font-size: 1em;
        border-radius: 0; }
        .nl-rule .nl-rule-body form .js-input-browse .js-trigger span {
          line-height: 32px; }
        .nl-rule .nl-rule-body form .js-input-browse .js-trigger::after {
          background: #0098c7;
          color: #fff;
          line-height: 32px;
          -webkit-transition: background .15s ease, color .15s ease;
          -o-transition: background .15s ease, color .15s ease;
          transition: background .15s ease, color .15s ease;
          border-radius: 0;
          font-size: 20px; }
        .nl-rule .nl-rule-body form .js-input-browse .js-trigger:hover::after {
          background: #0089b3; }
      .nl-rule .nl-rule-body form .errors {
        list-style-type: none;
        margin: -.5em 0 1em;
        padding: 0; }
        .nl-rule .nl-rule-body form .errors li {
          color: #f00; }
      .nl-rule .nl-rule-body form label + .errors {
        margin: .25em 0 .125em; }
  .nl-rule .nl-rule-actions {
    display: none;
    border-top: 1px solid rgba(0, 0, 0, 0.075);
    padding: 20px;
    background: #fff;
    text-align: right; }
  .nl-rule .settings-loader {
    display: none;
    color: #bfbfbf;
    font-size: 10px;
    padding: 1em 0;
    text-align: center; }
  .nl-rule .settings-list {
    list-style-type: none;
    margin: 0;
    padding: 0; }
    .nl-rule .settings-list > li {
      padding: .5em 2.5em .5em 1em;
      margin: 0 0 .5em;
      position: relative;
      background-color: rgba(255, 255, 255, 0.5); }
      .nl-rule .settings-list > li .remove-setting {
        position: absolute;
        right: 6px;
        top: 7px;
        width: 18px;
        text-align: center;
        height: 18px;
        line-height: 18px;
        display: block;
        color: #ff0080;
        -webkit-transition: background .15s;
        -o-transition: background .15s;
        transition: background .15s; }
        .nl-rule .settings-list > li .remove-setting i {
          font-size: 1.3333333333em;
          line-height: inherit; }
        .nl-rule .settings-list > li .remove-setting:hover {
          background: rgba(0, 0, 0, 0.08); }
    .nl-rule .settings-list .settings-value {
      display: inline-block;
      line-height: 1.5; }
      .nl-rule .settings-list .settings-value.editable-value {
        cursor: pointer;
        border-bottom: 1px dashed rgba(0, 0, 0, 0.2); }
        .nl-rule .settings-list .settings-value.editable-value::after {
          content: 'edit';
          font-size: 1.1666666667em;
          color: #0098c7;
          margin: 0 0 2px .5em;
          vertical-align: middle; }
  .nl-rule .disabled-label {
    font-size: 10px;
    text-transform: uppercase;
    padding: .5em 1.25em;
    display: inline-block;
    margin: 0 20px;
    background: #ec417a;
    color: #fff; }
  .sorting .nl-rule .nl-rule-content {
    cursor: move;
    cursor: grab;
    cursor: -webkit-grab;
    -webkit-box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3); }
    .sorting .nl-rule .nl-rule-content:active {
      cursor: grabbing;
      cursor: -webkit-grabbing; }
  .sorting .nl-rule .nl-rule-head {
    position: relative; }
    .sorting .nl-rule .nl-rule-head::before {
      content: '';
      position: absolute;
      background: transparent url("data: image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAAMAAAADCAYAAABWKLW/AAAAF0lEQVQIW2NkYGD4z8DAwMgAI0AMDA4AI3EBBCKrOnQAAAAASUVORK5CYII=") repeat;
      width: 8px;
      left: 4px;
      top: 8px;
      bottom: 8px;
      opacity: .25; }
    .sorting .nl-rule .nl-rule-head .nl-dropdown {
      opacity: .3;
      pointer-events: none; }
  .sorting .nl-rule .nl-rule-actions,
  .sorting .nl-rule .remove-setting,
  .sorting .nl-rule .settings-action,
  .sorting .nl-rule a.js-link-layout,
  .sorting .nl-rule .js-open-bm {
    display: none !important; }
  .sorting .nl-rule .editable-value {
    border: 0 !important; }
    .sorting .nl-rule .editable-value::after {
      display: none !important; }
  .sorting .nl-rule.nl-rule-hidden {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }
  .nl-rule.ui-sortable-placeholder {
    visibility: visible !important;
    background: transparent;
    -webkit-box-shadow: none;
            box-shadow: none;
    outline: 1px dashed #b3bccb;
    outline-offset: 4px; }
    .nl-rule.ui-sortable-placeholder * {
      visibility: hidden; }

.nl-rule-content {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  background: #fff;
  -webkit-box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
          box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2); }

.nl-rules {
  overflow-y: auto;
  position: absolute;
  left: 0;
  right: 0;
  top: 164px;
  bottom: 30px;
  padding: 4px 30px 80px 30px; }
  .nl-rules .nl-rule-between {
    text-align: center;
    margin: .75em 0;
    position: relative; }
    .sorting .nl-rules .nl-rule-between {
      display: none; }
    .nl-rules .nl-rule-between i {
      vertical-align: middle;
      font-size: 1.75em; }
    .nl-rules .nl-rule-between .hidden-amount {
      position: absolute;
      left: 50%;
      top: 50%;
      -webkit-transform: translate3d(0, -50%, 0);
              transform: translate3d(0, -50%, 0);
      font-size: .8em;
      margin-left: 1em; }

.nl-no-items,
.nl-no-filtered-items {
  display: none;
  text-align: center;
  font-style: italic;
  margin: 3em 0; }
  .nl-no-items::before, .nl-no-items::after,
  .nl-no-filtered-items::before,
  .nl-no-filtered-items::after {
    content: '-';
    display: inline-block;
    margin: 0 .5em; }

.no-filtered-items .nl-rule-between {
  display: none; }

.no-filtered-items .nl-no-filtered-items {
  display: block; }

.nl-mappings-filter {
  text-align: left; }

#layouts {
  display: none; }

.js-change-layouts-view::before {
  content: "view_comfy";
  line-height: inherit;
  font-size: 24px; }

.nl-layout-icon {
  border: 1px solid #a1a1a1;
  padding: 1px;
  opacity: 0.65; }
  .nl-layout-icon .layout-icon {
    display: block;
    width: 100%;
    height: 0;
    padding-bottom: 150%; }

.nl-layout-info .nl-layout-description p {
  margin: 0;
  word-break: break-word; }

.nl-layout-content {
  background: #fff;
  color: #666666;
  font-size: 12px; }
  .nl-layout-content .nl-layout-name {
    color: #333333;
    font-size: 14px;
    font-weight: 700; }
    .nl-layout-content .nl-layout-name a {
      color: inherit;
      text-decoration: none; }
  .nl-layout-content .unpublished-label {
    text-transform: uppercase;
    display: inline-block;
    text-align: center;
    margin: 0 1em;
    padding: 0.5em 0.7em;
    font-size: 8px;
    color: #fff;
    background: #668899;
    line-height: 1.375;
    font-weight: 700; }

.nl-layout-actions {
  -webkit-box-align: stretch;
      -ms-flex-align: stretch;
          align-items: stretch; }
  .nl-layout-actions .nl-layout-data {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center; }
    .nl-layout-actions .nl-layout-data .meta-info {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-align: center;
          -ms-flex-align: center;
              align-items: center; }
      .nl-layout-actions .nl-layout-data .meta-info i {
        font-size: 20px;
        margin-right: 0.25em; }
  .nl-layout-actions .nl-dropdown {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: stretch;
        -ms-flex-align: stretch;
            align-items: stretch; }
    .nl-layout-actions .nl-dropdown .nl-btn {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-align: center;
          -ms-flex-align: center;
              align-items: center;
      height: auto;
      min-width: auto;
      font-size: 24px;
      border-radius: 0; }
      .nl-layout-actions .nl-dropdown .nl-btn i {
        font-size: inherit; }

/* grid view */
.nl-layouts-view-grid .js-change-layouts-view::before {
  content: "view_list"; }

.nl-layouts-view-grid .nl-layouts {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin: 0 -15px; }

.nl-layouts-view-grid .nl-layout {
  width: 25%;
  padding: 0 15px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; }
  .nl-layouts-view-grid .nl-layout .nl-layout-content {
    -webkit-box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
    margin: 0 0 30px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column; }
    .nl-layouts-view-grid .nl-layout .nl-layout-content:hover .nl-layout-actions {
      background-color: #0098c7;
      color: #fff; }
    .nl-layouts-view-grid .nl-layout .nl-layout-content .unpublished-label {
      margin: 10px 0 0; }
  .nl-layouts-view-grid .nl-layout .nl-layout-info {
    padding: 10px 10px 15px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: start;
        -ms-flex-align: start;
            align-items: flex-start;
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1; }
    .nl-layouts-view-grid .nl-layout .nl-layout-info .nl-layout-text {
      -webkit-box-flex: 1;
          -ms-flex: 1;
              flex: 1; }
    .nl-layouts-view-grid .nl-layout .nl-layout-info .nl-layout-name {
      margin: 0 0 0.5em; }
    .nl-layouts-view-grid .nl-layout .nl-layout-info .nl-layout-modified {
      font-size: 11px;
      margin: 1em 0 0;
      color: #999999; }
      .nl-layouts-view-grid .nl-layout .nl-layout-info .nl-layout-modified p {
        margin: 0; }
  .nl-layouts-view-grid .nl-layout .nl-layout-type {
    width: 40px;
    margin: 0 10px 0 0; }
    .nl-layouts-view-grid .nl-layout .nl-layout-type p {
      display: none; }
  .nl-layouts-view-grid .nl-layout .nl-layout-actions {
    background-color: #d4d4d4;
    height: 30px;
    position: relative;
    -webkit-transition: background .2s;
    -o-transition: background .2s;
    transition: background .2s;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }
    .nl-layouts-view-grid .nl-layout .nl-layout-actions .nl-layout-data {
      padding: 0 10px; }
      .nl-layouts-view-grid .nl-layout .nl-layout-actions .nl-layout-data .meta-info i {
        color: inherit; }
    .nl-layouts-view-grid .nl-layout .nl-layout-actions .nl-dropdown {
      position: static; }
      .nl-layouts-view-grid .nl-layout .nl-layout-actions .nl-dropdown .nl-btn {
        padding: 0 10px;
        color: inherit; }
      .nl-layouts-view-grid .nl-layout .nl-layout-actions .nl-dropdown .nl-dropdown-menu {
        left: 0;
        right: 0; }

.nl-layouts-view-grid .nl-layouts-head {
  display: none !important; }

.nl-layouts-view-grid .layout-sorting-controls {
  float: left;
  padding: 0 1em 0 0; }
  .nl-layouts-view-grid .layout-sorting-controls .nl-select, .nl-layouts-view-grid .layout-sorting-controls .nl-rule .nl-rule-body form select:not([multiple]), .nl-rule .nl-rule-body form .nl-layouts-view-grid .layout-sorting-controls select:not([multiple]) {
    background-color: #fff; }
  .nl-layouts-view-grid .layout-sorting-controls label {
    margin: 0;
    vertical-align: middle; }
    .nl-layouts-view-grid .layout-sorting-controls label i {
      vertical-align: middle; }

@media screen and (max-width: 1100px) {
  .nl-layouts-view-grid .layout-sorting-controls {
    float: none;
    padding: 1em 0 0; } }

@media screen and (max-width: 1400px) {
  .nl-layouts-view-grid .nl-layout {
    width: 33.333333333333%; } }

@media screen and (max-width: 992px) {
  .nl-layouts-view-grid .nl-layout {
    width: 50%; } }

/* list view */
.nl-layouts-view-list .nl-layout-info {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  padding: 0 20px; }
  .nl-layouts-view-list .nl-layout-info .nl-layout-text {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1; }
  .nl-layouts-view-list .nl-layout-info .nl-layout-name {
    padding-right: 20px;
    width: 30%; }
    .nl-layouts-view-list .nl-layout-info .nl-layout-name .nl-layout-export-checkbox {
      vertical-align: middle; }
  .nl-layouts-view-list .nl-layout-info .nl-layout-description {
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
    padding-right: 20px; }
  .nl-layouts-view-list .nl-layout-info .nl-layout-modified {
    width: 180px;
    text-align: right;
    padding-right: 20px; }

.nl-layouts-view-list .nl-layout-type {
  margin: 0 0 0 20px;
  width: 100px;
  -webkit-box-ordinal-group: 2;
      -ms-flex-order: 1;
          order: 1; }

.nl-layouts-view-list .nl-layout-actions {
  -webkit-box-ordinal-group: 3;
      -ms-flex-order: 2;
          order: 2;
  width: 180px; }
  .nl-layouts-view-list .nl-layout-actions > * {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }
  .nl-layouts-view-list .nl-layout-actions .nl-layout-data {
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
    padding: 0 20px; }

.nl-layouts-view-list .nl-layout .nl-layout-content {
  border: 1px solid #d9d9d9;
  margin: 0 0 -1px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  min-height: 60px; }
  .nl-layouts-view-list .nl-layout .nl-layout-content > * {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center; }

.nl-layouts-view-list .nl-layout .nl-layout-type {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  height: 60px;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center; }

.nl-layouts-view-list .nl-layout .nl-layout-icon {
  width: 32px;
  margin: 0 10px 0 0; }

.nl-layouts-view-list .nl-layout .nl-layout-actions {
  -webkit-box-align: stretch;
      -ms-flex-align: stretch;
          align-items: stretch; }
  .nl-layouts-view-list .nl-layout .nl-layout-actions .nl-layout-data .meta-info i {
    color: #999999; }
  .nl-layouts-view-list .nl-layout .nl-layout-actions .nl-dropdown .nl-btn {
    padding: 0 0.75em; }

.nl-layouts-view-list .nl-layout .nl-layout-description p {
  line-height: 1.5;
  max-height: 3em;
  overflow: hidden;
  display: block;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  -o-text-overflow: ellipsis;
     text-overflow: ellipsis;
  width: 100%; }

.nl-layouts-view-list .nl-layout .nl-layout-modified {
  font-size: 11px; }

.nl-layouts-view-list .nl-layouts-head {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  font-size: 12px; }
  .nl-layouts-view-list .nl-layouts-head > * {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }
  .nl-layouts-view-list .nl-layouts-head .js-reorder-layouts {
    color: #404040;
    text-decoration: none;
    display: inline-block;
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
    padding: .5em 1em;
    margin: 0 -1em;
    white-space: nowrap; }
    .nl-layouts-view-list .nl-layouts-head .js-reorder-layouts .sort-icon {
      display: none;
      position: relative;
      width: 6px;
      height: 13px;
      vertical-align: middle;
      margin: 0 0 0 .5em;
      pointer-events: none; }
      .nl-layouts-view-list .nl-layouts-head .js-reorder-layouts .sort-icon::before {
        content: '';
        position: absolute;
        left: 50%;
        top: 50%;
        -webkit-transform: translate3d(-50%, -50%, 0);
                transform: translate3d(-50%, -50%, 0);
        border-left: 4px solid transparent;
        border-right: 4px solid transparent;
        border-bottom: 8px solid currentColor; }
    .nl-layouts-view-list .nl-layouts-head .js-reorder-layouts.active {
      font-weight: 500;
      background: #e6e5e5; }
      .nl-layouts-view-list .nl-layouts-head .js-reorder-layouts.active .sort-icon {
        display: inline-block; }
      .nl-layouts-view-list .nl-layouts-head .js-reorder-layouts.active.sorting-asc .sort-icon::before {
        border-top: 8px solid currentColor;
        border-bottom: 0; }

.nl-layouts-view-list .layout-sorting-controls {
  display: none !important; }

@media screen and (max-width: 1200px) {
  .nl-layouts-view-list .nl-layout-type {
    margin: 0;
    width: 80px; }
    .nl-layouts-view-list .nl-layout-type p {
      display: none; }
  .nl-layouts-view-list .nl-layout-actions {
    width: 140px;
    padding: 0; }
  .nl-layouts-view-list .nl-layout-info .nl-layout-name {
    width: 40%; }
  .nl-layouts-view-list .nl-layout-info .nl-layout-modified {
    padding-right: 20px;
    width: 100px; }
  .nl-layouts-view-list .nl-layouts-head .js-reorder-layouts {
    padding: .5em .75em;
    margin: 0 -.75em; } }

@media screen and (max-width: 992px) {
  .nl-layouts-view-list .nl-layout-info {
    padding: 0 0 0 20px; }
    .nl-layouts-view-list .nl-layout-info .nl-layout-name {
      -webkit-box-flex: 1;
          -ms-flex: 1;
              flex: 1;
      width: auto; }
    .nl-layouts-view-list .nl-layout-info .nl-layout-description {
      display: none; } }

.nl-shared-layouts .meta-info i {
  -webkit-transform: translate3d(0, 0.1em, 0) rotate(210deg);
          transform: translate3d(0, 0.1em, 0) rotate(210deg); }

.nl-layout-export-checkbox {
  display: none; }
  .nl-layout-export-checkbox input {
    position: absolute;
    pointer-events: all;
    opacity: 0;
    left: -9999em; }
    .nl-layout-export-checkbox input + label {
      position: relative;
      margin: 0;
      padding-left: 1em;
      cursor: pointer;
      display: block;
      min-height: 1em;
      font-size: 24px; }
      .nl-layout-export-checkbox input + label::before {
        position: absolute;
        font-size: 1em;
        line-height: 1;
        left: 0;
        top: 0;
        content: "check_box_outline_blank"; }
    .nl-layout-export-checkbox input:checked + label::before {
      content: "check_box";
      color: #0098c7; }
    .nl-layout-export-checkbox input:disabled + label {
      opacity: .2;
      cursor: not-allowed; }
  .layout-export .nl-layout-export-checkbox {
    display: inline-block; }

.nl-modal-cache .nl-modal {
  width: 600px; }
  .nl-modal-cache .nl-modal .nl-modal-body {
    padding: 0; }
    .nl-modal-cache .nl-modal .nl-modal-body .errors {
      padding: 15px;
      margin: 0; }

.nl-caches-table {
  width: 100%;
  border-collapse: collapse;
  margin-top: -1px; }
  .nl-caches-table th,
  .nl-caches-table td {
    padding: 15px 15px 14px 0;
    font-size: 12px;
    line-height: 1.5; }
    .nl-caches-table th:first-child,
    .nl-caches-table td:first-child {
      padding-left: 15px; }
  .nl-caches-table th {
    background: #f2f2f2;
    font-weight: 700;
    text-transform: uppercase;
    text-align: left; }
    .nl-caches-table th .nl-btn {
      text-transform: none;
      font-weight: 500; }
  .nl-caches-table td {
    color: #4d4c4c; }
    .nl-caches-table td p {
      margin: 0;
      line-height: inherit; }
    .nl-caches-table td.nl-caches-ttl {
      font-size: 14px; }
  .nl-caches-table .nl-caches-action {
    text-align: right; }
  .nl-caches-table tbody tr {
    border-bottom: 1px solid #d1d1d1; }
    .nl-caches-table tbody tr:last-child {
      border-bottom: none; }
  .nl-caches-table input[type="checkbox"] + label {
    overflow: hidden;
    text-indent: -999em; }
    .nl-caches-table input[type="checkbox"] + label::before {
      text-indent: 0; }
    .nl-modal-mask .nl-caches-table input[type="checkbox"] + label {
      padding: 0 !important;
      width: 2em;
      height: 2em;
      margin: 0;
      display: inline-block; }

.nl-caches-empty {
  padding: 15px;
  margin: 1em 0;
  text-align: center; }

/*!
 * Datetimepicker for Bootstrap 3
 * version : 4.17.47
 * https://github.com/Eonasdan/bootstrap-datetimepicker/
 */
.bootstrap-datetimepicker-widget {
  list-style: none; }

.bootstrap-datetimepicker-widget.dropdown-menu {
  display: block;
  margin: 2px 0;
  padding: 4px;
  width: 19em; }

@media (min-width: 768px) {
  .bootstrap-datetimepicker-widget.dropdown-menu.timepicker-sbs {
    width: 38em; } }

@media (min-width: 992px) {
  .bootstrap-datetimepicker-widget.dropdown-menu.timepicker-sbs {
    width: 38em; } }

@media (min-width: 1200px) {
  .bootstrap-datetimepicker-widget.dropdown-menu.timepicker-sbs {
    width: 38em; } }

.bootstrap-datetimepicker-widget.dropdown-menu:before,
.bootstrap-datetimepicker-widget.dropdown-menu:after {
  content: '';
  display: inline-block;
  position: absolute; }

.bootstrap-datetimepicker-widget.dropdown-menu.bottom:before {
  border-left: 7px solid transparent;
  border-right: 7px solid transparent;
  border-bottom: 7px solid #ccc;
  border-bottom-color: rgba(0, 0, 0, 0.2);
  top: -7px;
  left: 7px; }

.bootstrap-datetimepicker-widget.dropdown-menu.bottom:after {
  border-left: 6px solid transparent;
  border-right: 6px solid transparent;
  border-bottom: 6px solid white;
  top: -6px;
  left: 8px; }

.bootstrap-datetimepicker-widget.dropdown-menu.top:before {
  border-left: 7px solid transparent;
  border-right: 7px solid transparent;
  border-top: 7px solid #ccc;
  border-top-color: rgba(0, 0, 0, 0.2);
  bottom: -7px;
  left: 6px; }

.bootstrap-datetimepicker-widget.dropdown-menu.top:after {
  border-left: 6px solid transparent;
  border-right: 6px solid transparent;
  border-top: 6px solid white;
  bottom: -6px;
  left: 7px; }

.bootstrap-datetimepicker-widget.dropdown-menu.pull-right:before {
  left: auto;
  right: 6px; }

.bootstrap-datetimepicker-widget.dropdown-menu.pull-right:after {
  left: auto;
  right: 7px; }

.bootstrap-datetimepicker-widget .list-unstyled {
  margin: 0; }

.bootstrap-datetimepicker-widget a[data-action] {
  padding: 6px 0; }

.bootstrap-datetimepicker-widget a[data-action]:active {
  -webkit-box-shadow: none;
          box-shadow: none; }

.bootstrap-datetimepicker-widget .timepicker-hour,
.bootstrap-datetimepicker-widget .timepicker-minute,
.bootstrap-datetimepicker-widget .timepicker-second {
  width: 54px;
  font-weight: bold;
  font-size: 1.2em;
  margin: 0; }

.bootstrap-datetimepicker-widget button[data-action] {
  padding: 6px; }

.bootstrap-datetimepicker-widget .btn[data-action="incrementHours"]::after {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
  content: "Increment Hours"; }

.bootstrap-datetimepicker-widget .btn[data-action="incrementMinutes"]::after {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
  content: "Increment Minutes"; }

.bootstrap-datetimepicker-widget .btn[data-action="decrementHours"]::after {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
  content: "Decrement Hours"; }

.bootstrap-datetimepicker-widget .btn[data-action="decrementMinutes"]::after {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
  content: "Decrement Minutes"; }

.bootstrap-datetimepicker-widget .btn[data-action="showHours"]::after {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
  content: "Show Hours"; }

.bootstrap-datetimepicker-widget .btn[data-action="showMinutes"]::after {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
  content: "Show Minutes"; }

.bootstrap-datetimepicker-widget .btn[data-action="togglePeriod"]::after {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
  content: "Toggle AM/PM"; }

.bootstrap-datetimepicker-widget .btn[data-action="clear"]::after {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
  content: "Clear the picker"; }

.bootstrap-datetimepicker-widget .btn[data-action="today"]::after {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
  content: "Set the date to today"; }

.bootstrap-datetimepicker-widget .picker-switch {
  text-align: center; }

.bootstrap-datetimepicker-widget .picker-switch::after {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
  content: "Toggle Date and Time Screens"; }

.bootstrap-datetimepicker-widget .picker-switch td {
  padding: 0;
  margin: 0;
  height: auto;
  width: auto;
  line-height: inherit; }

.bootstrap-datetimepicker-widget .picker-switch td span {
  line-height: 2.5;
  height: 2.5em;
  width: 100%; }

.bootstrap-datetimepicker-widget table {
  width: 100%;
  margin: 0; }

.bootstrap-datetimepicker-widget table td,
.bootstrap-datetimepicker-widget table th {
  text-align: center;
  border-radius: 4px; }

.bootstrap-datetimepicker-widget table th {
  height: 20px;
  line-height: 20px;
  width: 20px; }

.bootstrap-datetimepicker-widget table th.picker-switch {
  width: 145px; }

.bootstrap-datetimepicker-widget table th.disabled,
.bootstrap-datetimepicker-widget table th.disabled:hover {
  background: none;
  color: #777777;
  cursor: not-allowed; }

.bootstrap-datetimepicker-widget table th.prev::after {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
  content: "Previous Month"; }

.bootstrap-datetimepicker-widget table th.next::after {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
  content: "Next Month"; }

.bootstrap-datetimepicker-widget table thead tr:first-child th {
  cursor: pointer; }

.bootstrap-datetimepicker-widget table thead tr:first-child th:hover {
  background: #eeeeee; }

.bootstrap-datetimepicker-widget table td {
  height: 54px;
  line-height: 54px;
  width: 54px; }

.bootstrap-datetimepicker-widget table td.cw {
  font-size: .8em;
  height: 20px;
  line-height: 20px;
  color: #777777; }

.bootstrap-datetimepicker-widget table td.day {
  height: 20px;
  line-height: 20px;
  width: 20px; }

.bootstrap-datetimepicker-widget table td.day:hover,
.bootstrap-datetimepicker-widget table td.hour:hover,
.bootstrap-datetimepicker-widget table td.minute:hover,
.bootstrap-datetimepicker-widget table td.second:hover {
  background: #eeeeee;
  cursor: pointer; }

.bootstrap-datetimepicker-widget table td.old,
.bootstrap-datetimepicker-widget table td.new {
  color: #777777; }

.bootstrap-datetimepicker-widget table td.today {
  position: relative; }

.bootstrap-datetimepicker-widget table td.today:before {
  content: '';
  display: inline-block;
  border: solid transparent;
  border-width: 0 0 7px 7px;
  border-bottom-color: #337ab7;
  border-top-color: rgba(0, 0, 0, 0.2);
  position: absolute;
  bottom: 4px;
  right: 4px; }

.bootstrap-datetimepicker-widget table td.active,
.bootstrap-datetimepicker-widget table td.active:hover {
  background-color: #337ab7;
  color: #fff;
  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25); }

.bootstrap-datetimepicker-widget table td.active.today:before {
  border-bottom-color: #fff; }

.bootstrap-datetimepicker-widget table td.disabled,
.bootstrap-datetimepicker-widget table td.disabled:hover {
  background: none;
  color: #777777;
  cursor: not-allowed; }

.bootstrap-datetimepicker-widget table td span {
  display: inline-block;
  width: 54px;
  height: 54px;
  line-height: 54px;
  margin: 2px 1.5px;
  cursor: pointer;
  border-radius: 4px; }

.bootstrap-datetimepicker-widget table td span:hover {
  background: #eeeeee; }

.bootstrap-datetimepicker-widget table td span.active {
  background-color: #337ab7;
  color: #fff;
  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25); }

.bootstrap-datetimepicker-widget table td span.old {
  color: #777777; }

.bootstrap-datetimepicker-widget table td span.disabled,
.bootstrap-datetimepicker-widget table td span.disabled:hover {
  background: none;
  color: #777777;
  cursor: not-allowed; }

.bootstrap-datetimepicker-widget.usetwentyfour td.hour {
  height: 27px;
  line-height: 27px; }

.bootstrap-datetimepicker-widget.wider {
  width: 21em; }

.bootstrap-datetimepicker-widget .datepicker-decades .decade {
  line-height: 1.8em !important; }

.input-group.date .input-group-addon {
  cursor: pointer; }

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0; }

.material-icon-left::before {
  content: 'keyboard_arrow_left'; }

.material-icon-right::before {
  content: 'keyboard_arrow_right'; }

.material-icon-up::before {
  content: 'keyboard_arrow_up'; }

.material-icon-down::before {
  content: 'keyboard_arrow_down'; }

.material-icon-time::before {
  content: 'access_time'; }

.material-icon-calendar::before {
  content: 'today'; }

.material-icon-down::before {
  content: 'keyboard_arrow_down'; }

.material-icon-trash::before {
  content: 'delete'; }

.material-icon-close::before {
  content: 'close'; }

.material-icon-today::before {
  content: 'my_location'; }

.datetimepicker {
  padding-right: 2rem;
  position: relative; }
  .datetimepicker .input-group {
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1; }
  .datetimepicker .js-clear-input {
    opacity: 0;
    position: absolute;
    right: 0;
    width: 2rem;
    top: 50%;
    height: 2rem;
    margin-top: -1rem;
    border: 0;
    background: transparent;
    pointer-events: none;
    -webkit-transition: opacity .25s;
    -o-transition: opacity .25s;
    transition: opacity .25s;
    color: #d0021b; }
    .datetimepicker .js-clear-input i {
      vertical-align: middle; }
    .datetimepicker .js-clear-input:focus {
      outline: none; }
  .datetimepicker .datetime {
    position: relative;
    margin: 0 0 .5em; }
    .datetimepicker .datetime input[type="text"] {
      margin: 0;
      padding-right: 3em;
      cursor: pointer; }
    .datetimepicker .datetime .input-icon {
      position: absolute;
      right: 0;
      top: 50%;
      -webkit-transform: translateY(-50%);
          -ms-transform: translateY(-50%);
              transform: translateY(-50%);
      padding: .25em .5em;
      pointer-events: none; }
  .datetimepicker .datetime-formatted {
    position: absolute;
    left: -999em;
    top: -999em;
    width: 0px !important;
    height: 0px !important;
    visibility: hidden; }
  .datetimepicker.date-entered .js-clear-input {
    opacity: 1;
    pointer-events: initial; }
/*# sourceMappingURL=data:application/json;base64, */